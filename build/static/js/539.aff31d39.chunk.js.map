{"version":3,"file":"static/js/539.aff31d39.chunk.js","mappings":"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","sources":["Components/HomeComponents/FilterSectionComponents/MainSearchButton.jsx","Components/HomeComponents/FilterSectionComponents/ResetDataButton.jsx","Components/HomeComponents/FilterSectionComponents/FilterSection.jsx","Components/HomeComponents/ListingsSectionComponents/PageToggleButton.jsx","Components/HomeComponents/ListingsSectionComponents/ListingsSection.jsx","Pages/Home.jsx"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport { runInAction } from \"mobx\";\n\nconst MainSearchButton = () => {\n  const rootStore = React.useContext(RootContext);\n  const { resetDefaultPage, page } = rootStore.paginationStore;\n  const { getFilteredData } = rootStore.dataStore;\n  const { params } = rootStore.filterStore;\n  const { sortData } = rootStore.sortingStore;\n\n  //Search based on all neccessary global store values\n  async function handleSortFilterAndPages() {\n    resetDefaultPage();\n\n    let url = `https://api.baasic.com/beta/new-react-project/resources/car?page=${page}&rpp=12`;\n\n    if (sortData) {\n      url = url + `&sort=${sortData}`;\n      console.log(url)\n    }\n\n    let res = await axios.get(url, {\n      headers: { \"Content-type\": \"application/json\" },\n      params: params,\n    });\n    let data = await res.data;\n    runInAction(() => {\n      getFilteredData(data);\n    });\n  }\n\n  return (\n    <>\n      <button className=\"btn btn-dark me-5 search-button\" onClick={handleSortFilterAndPages}>\n        Search\n      </button>\n    </>\n  );\n};\n\nexport default observer(MainSearchButton);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport { runInAction } from \"mobx\";\n\nconst ResetDataButton = () => {\n  const rootStore = React.useContext(RootContext);\n  const paginationStore = rootStore.paginationStore;\n  const dataStore = rootStore.dataStore;\n  const filterStore = rootStore.filterStore;\n  const sortingStore = rootStore.sortingStore;\n\n  //Search based on all neccessary global store values\n  async function resetData() {\n    sortingStore.resetSortData();\n    filterStore.resetFilterState();\n    paginationStore.resetDefaultPage();\n\n    let url = `https://api.baasic.com/beta/new-react-project/resources/car?page=1&rpp=12`;\n\n    let res = await axios.get(url, {\n      headers: { \"Content-type\": \"application/json\" },\n      params: filterStore.params,\n    });\n    let data = await res.data;\n    runInAction(() => {\n      dataStore.getFilteredData(data);\n    });\n  }\n\n  return (\n    <>\n      <button className=\"btn btn-light ms-5\" onClick={resetData}>\n        Reset Filters\n      </button>\n    </>\n  );\n};\n\nexport default observer(ResetDataButton);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport MainSearchButton from \"./MainSearchButton\";\nimport ResetDataButton from \"./ResetDataButton\";\nimport \"./FilterSection.css\";\n\nconst FilterSection = () => {\n  //Import relevant context\n  const rootStore = React.useContext(RootContext);\n  const { filterData, setFilterData, makeParams } = rootStore.filterStore;\n\n  //Category specific information (for schema properties)\n  const filterCategories = [\n    {\n      name: \"car\",\n      labelText: \"Which brand are you looking for?\",\n      labelPlaceholder: \"Volkswagen\",\n    },\n    {\n      name: \"car_model\",\n      labelText: \"Which car model would you like to see?\",\n      labelPlaceholder: \"Golf 4\",\n    },\n    {\n      name: \"car_model_year\",\n      labelText: \"Which model year?\",\n      labelPlaceholder: \"2000\",\n    },\n    {\n      name: \"car_color\",\n      labelText: \"Any particular color?\",\n      labelPlaceholder: \"Navy Blue\",\n    },\n  ];\n\n  //SearchQuery Handling\n  function handleData(e) {\n    const prop = e.target.name;\n    const value = e.target.value;\n\n    setFilterData(prop, value);\n    makeParams()\n  }\n\n  return (\n    <div className=\"browse-buttons-container\">\n      <span className=\"lead\">Filter:</span>\n      <div className=\"browseButtonsContainer\">\n        {filterCategories.map((category) => {\n          return (\n            <div key={category.name}>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingInput\"\n                  placeholder={category.labelPlaceholder}\n                  name={category.name}\n                  value={filterData[category.name]}\n                  onChange={handleData}\n                />\n                <label htmlFor=\"floatingInput\">{category.labelText}</label>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <MainSearchButton />\n      <ResetDataButton />\n    </div>\n  );\n};\n\nexport default observer(FilterSection);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport \"./PageToggleButton.css\";\n\nconst PageToggleButton = (props) => {\n  const rootStore = React.useContext(RootContext);\n  const paginationStore = rootStore.paginationStore;\n\n  return (\n    <div className=\"pagination-section\">\n      <button\n        className=\"btn btn-light\"\n        onClick={() => {\n          paginationStore.setPreviousPage();\n          props.changePage();\n        }}\n      >\n        Previous Page\n      </button>\n      <span className=\"currentPage page-link\">{paginationStore.page}</span>\n      <button\n        className=\"btn btn-light\"\n        onClick={() => {\n          paginationStore.setNextPage();\n          props.changePage();\n        }}\n      >\n        Next Page\n      </button>\n    </div>\n  );\n};\n\nexport default observer(PageToggleButton);\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport PageToggleButton from \"./PageToggleButton\";\nimport { observer } from \"mobx-react\";\nimport { runInAction } from \"mobx\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport \"./ListingsSection.css\";\n\nconst ListingsSection = () => {\n  //Import relevant context\n  const rootStore = React.useContext(RootContext);\n  const paginationStore = rootStore.paginationStore;\n  const dataStore = rootStore.dataStore;\n  const filterStore = rootStore.filterStore;\n  const sortingStore = rootStore.sortingStore;\n  const tokenStore = rootStore.tokenStore\n\n  //Fetch initial car data and save it to global state\n  useEffect(() => {\n    dataStore.getCarData(tokenStore.token);\n  }, []);\n\n  //Function for setting sort state\n  function setSortValue(e) {\n    const { value } = e.target;\n    sortingStore.setSortData(value);\n  }\n\n  //Function for calling next or previous page based on all sorting or filter criteria\n  async function handleSortFilterAndPages() {\n    let url = `https://api.baasic.com/beta/new-react-project/resources/car?page=${paginationStore.page}&rpp=12`;\n\n    if (sortingStore.sortData) {\n      url = url + `&sort=${sortingStore.sortData}`;\n    } \n\n    let res = await axios.get(url, {\n      headers: { \"Content-type\": \"application/json\" },\n      params: filterStore.params,\n    });\n    \n    let data = await res.data;\n    if(!data.item.length){\n      paginationStore.setPreviousPage()\n       return\n    }\n\n    runInAction(() => {\n      dataStore.getFilteredData(data)\n    });\n  }\n\n    return (\n      <div className=\"data-container\">\n        <div className=\"sorting-section\">\n          <span className=\"lead\">Sort by:</span>\n          <select\n            className=\"form-select form-select-sm sort-container\"\n            aria-label=\"Default select\"\n            onChange={setSortValue}\n            value={sortingStore.sortData}\n          >\n            <option value={\"\"}>{null}</option>\n            <option value=\"price|asc\">Price (Lowest to Highest)</option>\n            <option value=\"price|desc\">Price (Highest to Lowest)</option>\n          </select>\n        </div>\n        <div className=\"card-container\">\n          {dataStore.carData !== undefined && dataStore.carData.item ? (\n            dataStore.carData.item.map((elem) => {\n              return (\n                <div className=\"card car-card\" key={elem.id}>\n                  <span className=\"material-symbols-outlined\">car_rental</span>\n                  <div className=\"card-body\">\n                    <h4 className=\"card-title\">{elem.car}</h4>\n                    <ul className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">{elem.car_model}</li>\n                      <li className=\"list-group-item\">{elem.car_model_year}</li>\n                      <li className=\"list-group-item\">{elem.car_color}</li>\n                      <li className=\"list-group-item price-text\">{elem.price}</li>\n                    </ul>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div className=\"spinner\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n          )}\n        </div>\n        <PageToggleButton changePage={handleSortFilterAndPages} />\n      </div>\n    );\n};\n\nexport default observer(ListingsSection);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport FilterSection from \"../Components/HomeComponents/FilterSectionComponents/FilterSection\";\nimport ListingsSection from \"../Components/HomeComponents/ListingsSectionComponents/ListingsSection\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <>\n      <h1 className=\"h1 home-h1\">Find your dream car</h1>\n      <div className=\"hero-section\">\n        <FilterSection />\n        <ListingsSection />\n      </div>\n    </>\n  );\n};\n\nexport default observer(Home);\n"],"names":["observer","rootStore","React","RootContext","paginationStore","resetDefaultPage","page","getFilteredData","dataStore","params","filterStore","sortData","sortingStore","url","console","log","axios","headers","res","data","runInAction","className","onClick","resetSortData","resetFilterState","filterData","setFilterData","makeParams","handleData","e","prop","target","name","value","labelText","labelPlaceholder","map","category","type","id","placeholder","onChange","htmlFor","props","setPreviousPage","changePage","setNextPage","tokenStore","item","length","useEffect","getCarData","token","setSortData","undefined","carData","elem","car","car_model","car_model_year","car_color","price","role"],"sourceRoot":""}