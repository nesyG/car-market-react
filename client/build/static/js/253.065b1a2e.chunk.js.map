{"version":3,"file":"static/js/253.065b1a2e.chunk.js","mappings":"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","sources":["Common/services/sortFilterPageService.js","Components/HomeComponents/FilterSectionComponents/MainSearchButton.jsx","Common/services/resetDataService.js","Components/HomeComponents/FilterSectionComponents/ResetDataButton.jsx","Components/HomeComponents/FilterSectionComponents/FilterSection.jsx","Common/services/changePagesService.js","Components/HomeComponents/ListingsSectionComponents/PageToggleButton.jsx","Common/services/deleteSingleListingService.js","Components/HomeComponents/ListingsSectionComponents/DeleteButton.jsx","Common/services/editListingService.js","Components/HomeComponents/ListingsSectionComponents/EditListing.jsx","Components/HomeComponents/ListingsSectionComponents/ListingsSection.jsx","Common/services/addNewListingService.js","Components/HomeComponents/NewListing.jsx","Pages/Home.jsx"],"sourcesContent":["import { runInAction } from \"mobx\";\nimport callApi from \"../utils/callApi\";\n\nexport default async function handleSortFilterAndPages(rootStore) {\n  const { resetDefaultPage } = rootStore.paginationStore;\n  const { getFilteredData } = rootStore.dataStore;\n  const { params } = rootStore.filterStore;\n  const { sortData } = rootStore.sortingStore;\n  const { token } = rootStore.tokenStore;\n  let query = `?page=1&rpp=12`;\n  if (sortData) {\n    query = query + `&sort=${sortData}`;\n  }\n  try {\n    const result = await callApi(token, \"GET\", {}, query, params);\n    const data = await result.data;\n    runInAction(() => {\n      getFilteredData(data);\n    });\n    resetDefaultPage();\n  } catch (error) {\n    console.log(`Error: ${error}`);\n  }\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport handleSortFilterAndPages from \"../../../Common/services/sortFilterPageService\";\n\nconst MainSearchButton = () => {\nconst rootStore = React.useContext(RootContext);\n\n  return (\n    <>\n      <button className=\"btn btn-dark me-5 search-button\" onClick={()=>{handleSortFilterAndPages(rootStore)}}>\n        Search\n      </button>\n    </>\n  )\n}\n\nexport default observer(MainSearchButton);\n\n","export default async function resetData(rootStore) {\n  const { resetDefaultPage } = rootStore.paginationStore;\n  const { getCarData } = rootStore.dataStore;\n  const { resetFilterState } = rootStore.filterStore;\n  const { resetSortData } = rootStore.sortingStore;\n  const { token } = rootStore.tokenStore;\n  try {\n    resetSortData();\n    resetFilterState();\n    resetDefaultPage();\n    getCarData(token);\n  } catch (error) {\n    console.log(`Error: ${error}`);\n  }\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport resetData from \"../../../Common/services/resetDataService\";\n\nconst ResetDataButton = () => {\n  const rootStore = React.useContext(RootContext);\n\n  return (\n    <>\n      <button className=\"btn btn-light ms-5\" onClick={()=>{resetData(rootStore)}}>\n        Reset Filters\n      </button>\n    </>\n  );\n};\n\nexport default observer(ResetDataButton);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport MainSearchButton from \"./MainSearchButton\";\nimport ResetDataButton from \"./ResetDataButton\";\nimport \"./FilterSection.css\";\n\nconst FilterSection = () => {\n  //Import relevant context\n  const rootStore = React.useContext(RootContext);\n  const { filterData, setFilterData, makeParams } = rootStore.filterStore;\n\n  //Category specific information (for schema properties)\n  const filterCategories = [\n    {\n      name: \"car\",\n      labelText: \"Which brand are you looking for?\",\n      labelPlaceholder: \"Volkswagen\",\n    },\n    {\n      name: \"car_model\",\n      labelText: \"Which car model would you like to see?\",\n      labelPlaceholder: \"Golf 4\",\n    },\n    {\n      name: \"car_model_year\",\n      labelText: \"Which model year?\",\n      labelPlaceholder: \"2000\",\n    },\n    {\n      name: \"car_color\",\n      labelText: \"Any particular color?\",\n      labelPlaceholder: \"Navy Blue\",\n    },\n  ]\n\n  //SearchQuery Handling\n  function handleData(e) {\n    const prop = e.target.name;\n    const value = e.target.value;\n    setFilterData(prop, value);\n    makeParams();\n  }\n\n  return (\n    <div className=\"browse-buttons-container\">\n      <span className=\"lead\">Filter:</span>\n      <div className=\"browseButtonsContainer\">\n        {filterCategories.map((category) => {\n          return (\n            <div key={category.name}>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingInput\"\n                  placeholder={category.labelPlaceholder}\n                  name={category.name}\n                  value={filterData[category.name]}\n                  onChange={handleData}\n                />\n                <label htmlFor=\"floatingInput\">{category.labelText}</label>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <MainSearchButton />\n      <ResetDataButton />\n    </div>\n  )\n}\n\nexport default observer(FilterSection);\n","import { runInAction } from \"mobx\";\nimport callApi from \"../utils/callApi\";\n\nexport default async function changePages(rootStore) {\n  const { setPreviousPage, page } = rootStore.paginationStore;\n  const { getFilteredData } = rootStore.dataStore;\n  const { params } = rootStore.filterStore;\n  const { sortData } = rootStore.sortingStore;\n  const { token } = rootStore.tokenStore;\n\n  let query = `?page=${page}&rpp=12`;\n  if (sortData) {\n    query = query + `&sort=${sortData}`;\n  }\n\n  try {\n    const response = await callApi(token, \"GET\", {}, query, params);\n    const data = await response.data;\n    if (!data.item.length) {\n      setPreviousPage();\n      return;\n    }\n    runInAction(() => {\n      getFilteredData(data);\n    })\n  } catch (error) {\n    console.log(`Error: ${error}`);\n  }\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport changePages from \"../../../Common/services/changePagesService\";\nimport \"./PageToggleButton.css\";\n\nconst PageToggleButton = () => {\n  const rootStore = React.useContext(RootContext);\n  const {setPreviousPage, setNextPage, page} = rootStore.paginationStore;\n\n  return (\n    <div className=\"pagination-section\">\n      <button\n        className=\"btn btn-light\"\n        onClick={() => {\n          setPreviousPage();\n          changePages(rootStore);\n        }}\n      >\n        Previous Page\n      </button>\n      <span className=\"currentPage page-link\">{page}</span>\n      <button\n        className=\"btn btn-light\"\n        onClick={() => {\n          setNextPage();\n          changePages(rootStore);\n        }}\n      >\n        Next Page\n      </button>\n    </div>\n  )\n}\n\nexport default observer(PageToggleButton);\n","import callApi from \"../utils/callApi\";\n\nexport default async function deleteSingleListing(rootStore, carId) {\n  const { token } = rootStore.tokenStore;\n  const { getCarData } = rootStore.dataStore;\n  const { resetDefaultPage } = rootStore.paginationStore;\n  const { resetFilterState } = rootStore.filterStore;\n  const { resetSortData } = rootStore.sortingStore;\n  const query = `/${carId}`;\n  try {\n    const res = await callApi(token, \"DELETE\", {}, query, {});\n    getCarData(token);\n    resetDefaultPage();\n    resetFilterState();\n    resetSortData();\n  } catch (error) {\n    console.log(`Error: ${error}`);\n  }\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport deleteSingleListing from \"../../../Common/services/deleteSingleListingService\";\nimport \"./ListingsSection.css\";\n\nconst DeleteButton = (props) => {\n  const rootStore = React.useContext(RootContext);\n  const carId = props.id;\n  return (\n    <>\n      <button\n        className=\"btn btn-light btn-sm edit-btn\"\n        onClick={() => {\n          deleteSingleListing(rootStore, carId)\n        }}\n      >\n        <span className=\"material-symbols-outlined btn-symbol\">delete</span>\n      </button>\n    </>\n  )\n}\n\nexport default observer(DeleteButton);\n","import callApi from \"../utils/callApi\";\n\nexport default async function editListing(rootStore, carEditInput, carId) {\n  const { token } = rootStore.tokenStore;\n  const { getCarData } = rootStore.dataStore;\n  const { resetDefaultPage } = rootStore.paginationStore;\n  const { resetFilterState } = rootStore.filterStore;\n  const { resetSortData } = rootStore.sortingStore;\n  const query = `/${carId}`;\n  try {\n    const res = await callApi(token, \"PUT\", carEditInput, query, {});\n    getCarData(token);\n    resetDefaultPage();\n    resetFilterState();\n    resetSortData();\n  } catch (error) {\n    console.log(`Error: ${error}`);\n  }\n}\n","import React, { useState } from \"react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport editListing from \"../../../Common/services/editListingService\";\nimport \"./ListingsSection.css\";\n\nconst EditListing = (props) => {\n  const carId = props.id;\n  const rootStore = React.useContext(RootContext);\n  const [editIsOpened, setEditIsOpened] = useState(false);\n  function toggleListingWindow() {\n    setEditIsOpened(!editIsOpened);\n  }\n\n  const [carEditInput, setCarEditInput] = useState({\n    id: carId,\n    car: props.car,\n    price: props.price,\n    car_color: props.car_color,\n    car_model: props.car_model,\n    car_model_year: props.car_model_year,\n    car_vin: props.car_vin,\n    availability: props.availability,\n    date_added: props.date_added,\n  })\n\n  function handleInput(e) {\n    if (e.target.name === \"car_model_year\") {\n      e.target.value = Number(e.target.value);\n    }\n    setCarEditInput({ ...carEditInput, [e.target.name]: e.target.value });\n  }\n\n  return (\n    <>\n        <button\n          className=\"btn btn-light btn-sm ms-5 edit-btn\"\n          onClick={toggleListingWindow}\n        >\n          <span className=\"material-symbols-outlined btn-symbol\">edit</span>\n        </button>\n      {editIsOpened && (\n        <div className=\"editing-container\">\n          <button onClick={toggleListingWindow}>x</button>\n          <h2>Edit your car listing</h2>\n          <div className=\"new-listing-form\">\n            <label>Your car brand:</label>\n            <input\n              name=\"car\"\n              type=\"text\"\n              className=\"form-control\"\n              value={carEditInput.car}\n              onChange={handleInput}\n            ></input>\n            <label>Your car model:</label>\n            <input\n              name=\"car_model\"\n              type=\"text\"\n              className=\"form-control\"\n              value={carEditInput.car_model}\n              onChange={handleInput}\n            ></input>\n            <label>Your car model year:</label>\n            <input\n              name=\"car_model_year\"\n              type=\"text\"\n              className=\"form-control\"\n              value={carEditInput.car_model_year}\n              onChange={handleInput}\n            ></input>\n            <label>Your car color:</label>\n            <input\n              name=\"car_color\"\n              type=\"text\"\n              className=\"form-control\"\n              value={carEditInput.car_color}\n              onChange={handleInput}\n            ></input>\n            <label>Your car price:</label>\n            <input\n              name=\"price\"\n              type=\"text\"\n              className=\"form-control\"\n              value={carEditInput.price}\n              onChange={handleInput}\n            ></input>\n            <button \n              onClick={() => {\n                toggleListingWindow(),\n                  editListing(rootStore, carEditInput, carId);\n              }}\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default EditListing;\n","import React, { useEffect } from \"react\";\nimport PageToggleButton from \"./PageToggleButton\";\nimport DeleteButton from \"./DeleteButton\";\nimport EditListing from \"./EditListing\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../../Stores/RootStore\";\nimport {Link} from \"react-router-dom\";\nimport \"./ListingsSection.css\";\n\nconst ListingsSection = () => {\n  //Import relevant context\n  const rootStore = React.useContext(RootContext);\n  const dataStore = rootStore.dataStore;\n  const sortingStore = rootStore.sortingStore;\n  const tokenStore = rootStore.tokenStore\n\n  //Fetch initial car data and save it to global state\n  useEffect(() => {\n    dataStore.getCarData(tokenStore.token);\n  }, [dataStore, tokenStore.token])\n\n  //Function for setting sort state\n  function setSortValue(e) {\n    const { value } = e.target;\n    sortingStore.setSortData(value);\n  }\n\n    return (\n      <div className=\"data-container\">\n        <div className=\"sorting-section\">\n          <span className=\"lead\">Sort by:</span>\n          <select\n            className=\"form-select form-select-sm sort-container\"\n            aria-label=\"Default select\"\n            onChange={setSortValue}\n            value={sortingStore.sortData}\n          >\n            <option value={\"\"}>{null}</option>\n            <option value=\"price|asc\">Price (Lowest to Highest)</option>\n            <option value=\"price|desc\">Price (Highest to Lowest)</option>\n          </select>\n        </div>\n        <div className=\"card-container\">\n          {dataStore.carData !== undefined && dataStore.carData.item ? (\n            dataStore.carData.item.map((elem) => {\n              return (\n                <div className=\"card car-card\" key={elem.id}>\n                  <div className=\"link-and-delete-btn\">\n                  <Link to={`/singleListing/${elem.id}`}>More Info</Link>\n                  <EditListing {...elem}/>\n                  <DeleteButton {...elem}/>\n                  </div>\n                  <span className=\"material-symbols-outlined\">car_rental</span>\n                  <div className=\"card-body\">\n                    <h4 className=\"card-title\">{elem.car}</h4>\n                    <ul className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">{elem.car_model}</li>\n                      <li className=\"list-group-item\">{elem.car_model_year}</li>\n                      <li className=\"list-group-item\">{elem.car_color}</li>\n                      <li className=\"list-group-item price-text\">{elem.price}</li>\n                    </ul>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div className=\"spinner\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n          )}\n        </div>\n        <PageToggleButton />\n      </div>\n    )\n}\n\nexport default observer(ListingsSection);\n","import callApi from \"../utils/callApi\";\n\nexport default async function addNewListing(rootStore, carInput) {\n  const { token } = rootStore.tokenStore;\n  const { getCarData } = rootStore.dataStore;\n  try {\n    const response = await callApi(token, \"POST\", carInput, \"\", {});\n    getCarData(token);\n  } catch (error) {\n    console.log(`Error: ${error}`);\n  }\n}","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { RootContext } from \"../../Stores/RootStore\";\nimport addNewListing from \"../../Common/services/addNewListingService\";\nimport \"./newListing.css\";\n\nconst NewListing = () => {\n const rootStore = React.useContext(RootContext);\n  const [windowIsOpened, setwindowIsOpened] = useState(false);\n  function toggleListingWindow() {\n    setwindowIsOpened(!windowIsOpened);\n  }\n\n  const [carInput, setCarInput] = useState({car: \"\", price: \"\", car_color: \"\", car_model: \"\", car_model_year: null, car_vin: \"test\", availability: true, date_added: \"10th\"})\n\n  function handleInput (e) {\n    let { name, value } = e.target;\n    if(name === \"car_model_year\") {\n        value = Number(value);\n    }\n    setCarInput({ ...carInput, [name]: value });\n  }\n\n  return (\n    <>\n        <button className=\"btn btn-light me-5 add-btn\" onClick={toggleListingWindow}>\n          Add New Listing\n        </button>\n      {windowIsOpened && (\n        <div className=\"new-listing-container\">\n          <button className=\"close-btn\" onClick={toggleListingWindow}>x</button>\n          <h2 className=\"listing-heading\">Create your car listing</h2>\n          <div className=\"new-listing-form\">\n            <label>Your car brand:</label>\n            <input  name=\"car\"\n                type=\"text\"\n                className=\"form-control\"\n                value={carInput.car}\n                onChange={handleInput}></input>\n            <label>Your car model:</label>\n            <input name=\"car_model\"\n                type=\"text\"\n                className=\"form-control\"\n                value={carInput.car_model}\n                onChange={handleInput}></input>\n            <label>Your car model year:</label>\n            <input name=\"car_model_year\"\n                type=\"text\"\n                className=\"form-control\"\n                value={carInput.car_model_year}\n                onChange={handleInput}></input>\n            <label>Your car color:</label>\n            <input name=\"car_color\"\n                type=\"text\"\n                className=\"form-control\"\n                value={carInput.car_color}\n                onChange={handleInput}></input>\n            <label>Your car price:</label>\n            <input name=\"price\"\n                type=\"text\"\n                className=\"form-control\"\n                value={carInput.price}\n                onChange={handleInput}></input>\n            <button\n            className=\"create-btn\"\n              onClick={() => {\n                addNewListing(rootStore, carInput);\n                toggleListingWindow()\n              }}\n            >\n              Create\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default observer(NewListing);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport FilterSection from \"../Components/HomeComponents/FilterSectionComponents/FilterSection\";\nimport ListingsSection from \"../Components/HomeComponents/ListingsSectionComponents/ListingsSection\";\nimport NewListing from \"../Components/HomeComponents/NewListing\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <>\n    <div className=\"top\">\n    <h1 className=\"h1 home-h1\">Find your dream car</h1>\n      <NewListing />\n    </div>\n      <div className=\"hero-section\">\n        <FilterSection />\n        <ListingsSection />\n      </div>\n    </>\n  )\n}\n\nexport default observer(Home);\n"],"names":["rootStore","resetDefaultPage","paginationStore","getFilteredData","dataStore","params","filterStore","sortData","sortingStore","token","tokenStore","query","callApi","result","data","runInAction","console","log","observer","React","RootContext","className","onClick","handleSortFilterAndPages","getCarData","resetFilterState","resetSortData","error","resetData","filterData","setFilterData","makeParams","handleData","e","prop","target","name","value","labelText","labelPlaceholder","map","category","type","id","placeholder","onChange","htmlFor","changePages","setPreviousPage","page","response","item","length","setNextPage","carId","props","deleteSingleListing","carEditInput","useState","editIsOpened","setEditIsOpened","toggleListingWindow","car","price","car_color","car_model","car_model_year","car_vin","availability","date_added","setCarEditInput","handleInput","Number","editListing","useEffect","setSortData","undefined","carData","elem","to","role","carInput","windowIsOpened","setwindowIsOpened","setCarInput","addNewListing"],"sourceRoot":""}